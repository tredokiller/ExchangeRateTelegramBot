using Infrastructure.Models;
using Infrastructure.Services;
using Moq;
using Telegram.Bot.Types;

namespace Infrastructure.Tests.Models;


[TestClass]
public class MessageHandlerTests
{
    [TestMethod]
    [ExpectedException(typeof(ArgumentNullException))]
    public void ConstructorThrowExceptionTest()
    {
        var model = new MessageHandler(null);
    }
    


    [TestMethod]
    [ExpectedException(typeof(ArgumentNullException))]
    public void HandleMessageThrowExceptionTest()
    {
        var parserService = new JsonParserService(new AppSettings());
        var model = new MessageHandler(parserService);
        

        model.HandleMessage(null, null);
    }
    
    
    [TestMethod]
    [DataRow("/start" , "–ü—Ä–∏–≤—ñ—Ç, —è –±–æ—Ç —â–æ –Ω–∞–¥–∞—î –∫—É—Ä—Å –Ω–∞–π–±—ñ–ª—å—à –ø–æ—à–∏—Ä–µ–Ω–∏—Ö –≤–∞–ª—é—Ç –¥–æ –≥—Ä–∏–≤–Ω—ñ!üí•\n–¢–∏ –º–æ–∂–µ—à –≤–∫–∞–∑–∞—Ç–∏ –≤–∞–ª—é—Ç—É —Ç–∞ –¥–∞—Ç—É —ñ " +
                        "–¥—ñ–∑–Ω–∞—Ç–∏—Å—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π –∫—É—Ä—Å!üòé\n\n–ù–∞–ø—Ä–∏–∫–ª–∞–¥: USD 01.10.2022\n\n–£–≤–∞–≥–∞! –ê—Ä—Ö—ñ–≤ –∑–±–µ—Ä—ñ–≥–∞—î —É—Å—ñ –¥–∞–Ω—ñ –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 4 —Ä–æ–∫–∏, –∞–ª–µ —Ç–∏ –≤—Å–µ —â–µ –º–æ–∂–µ—à —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ –≤–≤–µ—Å—Ç–∏ —Ä–∞–Ω—ñ—à–Ω—é –¥–∞—Ç—É!")]
    [DataRow("USD" , "–ù–µ–≤—ñ—Ä–Ω–æ –∑–∞–¥–∞–Ω–∏–π –∫–æ–¥ –≤–∞–ª—é—Ç–∏, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.\n–ù–∞–ø—Ä–∏–∫–ª–∞–¥: USD 01.10.2022")]
    [DataRow("USD 12.01.2020" , "–ö—É—Ä—Å –Ω–∞ –∫—É–ø—ñ–≤–ª—é USD –Ω–∞ 12.01.2020 —Å—Ç–∞–Ω–æ–≤–∏—Ç—å: 23.75\n–ö—É—Ä—Å –Ω–∞ –ø—Ä–æ–¥–∞–∂ —Å—Ç–∞–Ω–æ–≤–∏—Ç—å: 24.25")]
    [DataRow("USD erttregdf" , "–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç–∏, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.\n–ù–∞–ø—Ä–∏–∫–ª–∞–¥: USD 01.10.2022")]
    public void HandleMessageTest(string messageText , string trueAnswer)
    {
        //var tokenBot = "5940614812:AAGeYkg9AssR4ivegSl4dV6hBQqP4kSWRPA";

        var mockedClient = new Mock<ITelegramClient>();

        var message = new Message();
        
        message.Text = messageText;
        message.Chat = new Chat();
        message.Chat.Id = 0;

        mockedClient.Setup(client => client.SendTextMessage(new ChatId(0), messageText));


        var appSettings = new AppSettings();

        appSettings.ApiUrl = "https://api.privatbank.ua/p24api/exchange_rates?date=";
        
        var parserService = new JsonParserService(appSettings);
        var model = new MessageHandler(parserService);

        model.HandleMessage(message , mockedClient.Object);

        mockedClient.Verify(client => client.SendTextMessage(new ChatId(0), trueAnswer) , Times.Once);
    }
}